<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp"
	xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	version="EE-3.7.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
        
    <batch:job name="syncUsersBatch">
        <batch:threading-profile poolExhaustedAction="WAIT"/>
        <batch:input>
            <db:select config-ref="GenericDatabaseConnectorMySql" doc:name="Query database for users">
                <db:parameterized-query><![CDATA[select firstname, lastname, id, email, salesforce_id, LastModifiedDate from sf_user]]></db:parameterized-query>


            </db:select>
        </batch:input>
        <batch:process-records>
            <batch:step name="foreachUserFetchSalesforceStep">
                <enricher   doc:name="store result in the payload 'sfid', 'sfprofileid' and 'LastModifiedDateFromSFDC' fields">
                    <sfdc:query-single config-ref="SalesforceA" query="SELECT Id, ProfileId, LastModifiedDate FROM User WHERE Email = '#[payload.email]'"  doc:name="Query Salesforce for current user"/>
                    <enrich source="#[payload.Id]" target="#[payload.sfid]"/>
                    <enrich source="#[payload.ProfileId]" target="#[payload.sfprofileid]"/>
                    <enrich source="#[payload.LastModifiedDate]" target="#[payload.LastModifiedDateFromSFDC]"/>
                </enricher>
            </batch:step>
            <batch:step name="upserUpsertInSalesforceStep" accept-expression="payload.sfid == null ? true : org.mule.templates.date.DateUtils.dateToDateTime(payload['LastModifiedDate']).isAfter(new org.joda.time.DateTime(payload['LastModifiedDateFromSFDC']))">

                <batch:commit size="200" doc:name="Batch Commit">
                    <dw:transform-message doc:name="Transform Users from DB to SFDC Users">
                        <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map {	
	Email : $.email,
	FirstName : $.firstname,
	(Id : $.sfid) when $.sfid != null,
	LastName : $.lastname,
	(CommunityNickname : $.firstname) when ($.sfid == null),
	(Alias: $.firstname) when ($.sfid == null),
	(Username : $.email) when ($.sfid == null),
	(LocaleSidKey : p('user.localeSidKey') ) when ($.sfid == null),
	(LanguageLocaleKey : p('user.languageLocaleKey') ) when ($.sfid == null),
	(EmailEncodingKey : p('user.emailEncodingKey') ) when ($.sfid == null),
	(TimeZoneSidKey : p('user.timeZoneSidKey') ) when ($.sfid == null)
}]]></dw:set-payload>
                    </dw:transform-message>
                    <sfdc:upsert config-ref="SalesforceA"  doc:name="Upsert Users in Salesforce" externalIdFieldName="Id" type="User">
                        <sfdc:objects ref="#[payload]"/>
                    </sfdc:upsert>
                    <logger message="#[payload]" level="INFO" doc:name="Log Salesforce response"/>
                </batch:commit>

            </batch:step>
        </batch:process-records>
        <batch:on-complete>
            <scatter-gather doc:name="All">
                <processor-chain>
                    <json:object-to-json-transformer doc:name="Transform BatchJobInstance to JSON"/>
                    <logger message="Migration process has finished: #[payload]" level="INFO" doc:name="Log migration process has finished"/>
                </processor-chain>
                <processor-chain>
                    <json:object-to-json-transformer doc:name="Transform BatchJobInstance to JSON"/>
                    <smtp:outbound-endpoint host="${smtp.host}" port="${smtp.port}" user="${smtp.user}" password="${smtp.password}" to="${mail.to}" from="${mail.from}" subject="${mail.subject}" responseTimeout="10000" connector-ref="gmailConnector" doc:name="Send result of the batch in mail"/>
                </processor-chain>
            </scatter-gather>

        </batch:on-complete>
    </batch:job>
    <flow name="mainFlow" >
        <batch:execute name="syncUsersBatch" doc:name="Trigger syncUsersBatch"/>
        <exception-strategy ref="defaultChoiceExceptionStrategy" doc:name="catch Exception and call defaultChoiceExceptionStrategy"/>
    </flow>


</mule>
